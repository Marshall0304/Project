% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by Neural Fitting app
% Created Fri Jun 03 12:54:34 CST 2016
%
% This script assumes these variables are defined:
%
%   s - input data.
%   output1 - target data.

x = s6train;
t = output6_train;

% x = X000001_predeal';
% t = X000001_output';

% Choose a Training Function
% For a list of all training functions type: help nntrain
% 'trainlm' is usually fastest.
% 'trainbr' takes longer but may be better for challenging problems.
% 'trainscg' uses less memory. NFTOOL falls back to this in low memory situations.
trainFcn = 'trainlm';  % Levenberg-Marquardt

% Create a Fitting Network
hiddenLayerSize = 8;
net = fitnet(hiddenLayerSize,trainFcn);

% Choose Input and Output Pre/Post-Processing Functions
% For a list of all processing functions type: help nnprocess
net.input.processFcns = {'removeconstantrows','mapminmax'};
net.output.processFcns = {'removeconstantrows','mapminmax'};

% Setup Division of Data for Training, Validation, Testing
% For a list of all data division functions type: help nndivide
net.divideFcn = 'dividerand';  % Divide data randomly
net.divideMode = 'sample';  % Divide up every sample
net.divideParam.trainRatio = 80/100;
net.divideParam.valRatio = 10/100;
net.divideParam.testRatio = 10/100;

% Choose a Performance Function
% For a list of all performance functions type: help nnperformance
net.performFcn = 'mse';  % Mean squared error

% Choose Plot Functions
% For a list of all plot functions type: help nnplot
net.plotFcns = {'plotperform','plottrainstate','ploterrhist', ...
  'plotregression', 'plotfit'};

% Train the Network
[net,tr] = train(net,x,t);

% Test the Network
y = net(x);
e = gsubtract(t,y);
performance = perform(net,t,y)

% Recalculate Training, Validation and Test Performance
trainTargets = t .* tr.trainMask{1};
valTargets = t  .* tr.valMask{1};
testTargets = t  .* tr.testMask{1};
trainPerformance = perform(net,trainTargets,y)
valPerformance = perform(net,valTargets,y)
testPerformance = perform(net,testTargets,y)

% View the Network
view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotfit(net,x,t)
%figure, plotregression(t,y)
%figure, ploterrhist(e)

% Deployment
% Change the (false) values to (true) to enable the following code blocks.
if (false)
  % Generate MATLAB function for neural network for application deployment
  % in MATLAB scripts or with MATLAB Compiler and Builder tools, or simply
  % to examine the calculations your trained neural network performs.
  genFunction(net,'myNeuralNetworkFunction');
  y = myNeuralNetworkFunction(x);
end
if (false)
  % Generate a matrix-only MATLAB function for neural network code
  % generation with MATLAB Coder tools.
  genFunction(net,'myNeuralNetworkFunction','MatrixOnly','yes');
  y = myNeuralNetworkFunction(x);
end
if (false)
  % Generate a Simulink diagram for simulation or deployment with.
  % Simulink Coder tools.
  gensim(net);
end

% predict = sim(net,s6test);
predect = net(s6test);
allpredect = [net(s6train),predect];
all = [output6_train,output6_test];
plot(all,'-b');
hold on;
plot(allpredect,'-r');
hold on;

count_1 = 0;
count_2 = 0;
count_5 = 0;
count_r = 0;
count_w = 0;
[count_x,count_y]=size(output6_test);  
for i=1:count_y
    error = (output6_test(1,i) - predict(1,i))/output6_test(1,i);
    if (error > -0.01 && error < 0.01)
        count_1 = count_1 + 1;
    end
    if (error > -0.02 && error < 0.02)
        count_2 = count_2 + 1;
    end
    if (error > -0.05 && error < 0.05)
        count_5 = count_5 + 1;
    end
    if (i > 7)
        if ((output6_test(1,i)-output6_test(1,i-7))>0&&(predict(1,i)-output6_test(1,i-7))>0 || (output6_test(1,i)-output6_test(1,i-7)<0)&&(predict(1,i)-output6_test(1,i-7))<0)
            count_r = count_r + 1;
        else
            count_w = count_w + 1;
        end
    end
    
end  
fid=fopen('C:\Users\marsh\Desktop\MX\学习\2015-2016第二学期\数据挖掘\大作业\代码\00000_result.txt','w');
fprintf(fid,'0.01以内的误差准确率：%f\r\n0.02以内的误差准确率：%f\r\n0.05以内的误差准确率：%f\r\n涨跌准确率：%f\r\n',count_1/count_y,count_2/count_y,count_5/count_y,count_r/(count_r+count_w));  
fclose(fid);  
